@model List<Minenetred.Web.Models.ProjectDto>

@{
    ViewData["Title"] = "ProjectsList";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

<script>
    function displayTable() {
        if ($('.datesTable').css('display') == 'none') {
            $('.datesTable').toggle("slide");
        }
    }
    function convertDateFormat(value) {
        value.setDate(value.getDate() + 1);
        var toReturn = value.getFullYear() + '-' +
            ('0' + (value.getMonth() + 1)).slice(-2) + '-' +
            ('0' + value.getDate()).slice(-2);
        return toReturn;
    }

    function setDateHeader(date, object, weekDays, i) {
        date.setDate(date.getDate() + i);
        var displayDate = convertDateFormat(date);
        var weekDay = weekDays[date.getDay()]
        $(object).html('<h3>' + weekDay + '</h3>' + '<text>' + displayDate + '</text>');

    }
    function setTotalHoursPerDay() {
        $('.hours-a-day').each(function (indexH, object) {
            $(object).find('h3').html('0');
            $('.time-entries').each(function (indexT) {
                if ($(this).index() - 1 == indexH) {
                    $(object).find('h3').html(parseFloat($(object).find('h3').html()) + parseFloat($(this).find('text').find('h4').text()));
                }
            });
        });

    }
    function setTotalHoursLoggedPerProject(sum, projectId, actualIndex) {
        $('#' + projectId).children('td:eq(' + actualIndex + ')').find('text').html('Hours logged:<br /> <h4>' + sum + '</h4> ');
    }

    function setValuesToForm(button) {
        var projectName = $(button).parent("td").parent("tr").find("td:first").text();
        $('#modalProjectTitle').text(projectName);
        var hiddenDate = $(button).parent("td").closest('table').find('th').eq($(button).parent("td").index()).find('text').html();
        $('#dateEntry').val(hiddenDate);
        $('#dateText').html('Date: <text>' + hiddenDate + '</text>');
        var projectId = $(button).parent("td").parent("tr").find("td:first").find('input').val();
        $('#projectIdInput').val(projectId);
    }

    function setSelector(className, type, projectId) {
        $(className).html('');
        $.each(type, function (index, object) {
            if (object.ProjectId == projectId) {
                $.each(Object.values(object)[1], function (index, _object) {
                    $(className).html($(className).html() + '<option value="' + _object.Id + '">' + Object.values(_object)[0] + '</option>');
                });
            }

        });
    }

    function createDataObject() {
        return JSON.stringify({
            issueId: parseInt($('.issue-selector').val()),
            spentOn: $('#dateText').find('text').text(),
            hours: parseFloat($('#hours-input').val()),
            activityId: parseInt($('.activity-selector').val()),
            comments: $('#comment-input').val()
        })

    }
    function validateInputs() {
        if (!$('#hours-input').val() || !$('#comment-input').val()) {
            $('.validation').text('Please fill all fields');
            return false;
        }
        return true;
    }
    function clearInputs() {
        $('.validation').text('');
        $('#comment-input').val('');
        $('#hours-input').val('');
    }
</script>
<script>
    $(document).ready(function () {
        var baseAdress = document.location.origin;
        var weekDays = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
        @{
            var scriptA = "var activities = [";
            foreach (var activity in ViewBag.activities)
            {
                var listedActivities = "";
                foreach (var listedAct in activity.Value)
                {
                    var array = "{Name:\"" + listedAct.Name + "\", Id:" + listedAct.Id + "}";
                    listedActivities += array + ",";
                }
                listedActivities = listedActivities.Substring(0, listedActivities.Length - 1);
                var output = "{ProjectId:" + activity.Key + ", activities : [" + listedActivities + "]}";
                if (!activity.Equals(ViewBag.lastAct))
                {
                    output += ",";
                }

                scriptA += output;
            }
            scriptA += "];";
            @Html.Raw(scriptA);
        }
        @{
            var scriptI = "var issues = [";
            foreach (var issue in ViewBag.issues)
            {
                var listedIssues = "";
                foreach (var listedI in issue.Value)
                {
                    var array = "{Name:\"" + listedI.Subject + "\", Id:" + listedI.Id + "}";
                    listedIssues += array + ",";
                }
                listedIssues = listedIssues.Length>1? listedIssues.Substring(0, listedIssues.Length - 1) : "";
                var output = "{ProjectId:" + issue.Key + ", Issues : [" + listedIssues + "]}";
                if (!issue.Equals(ViewBag.lastIss))
                {
                    output += ",";
                }

                scriptI += output;
            }
            scriptI += "];";
            @Html.Raw(scriptI);
        }

        $('#date').change(function () {
            displayTable();
            $('.tableHeader').each(function (i, obj) {
                setDateHeader(new Date($('#date').val()), obj, weekDays, i)
            });
            $('.table-row').each(function () {
                $(this).children('.time-entries').each(function (indexColumn) {
                    var date = $(this).closest('table').find('th').eq($(this).index()).find('text').text();
                    var projectId = $(this).parent("tr").find("td:first").find('input').val();
                    $(this).find('text').text('Loading...');
                    $('.hours-a-day').find('h3').text('Loading...');
                    $.ajax({
                        url: baseAdress + '/Entries/Hours/' + projectId + '?date=' + date,
                        dataType: 'json',
                        success: function (result) {
                            var actualIndex = indexColumn + 1;
                            setTotalHoursLoggedPerProject(result, projectId, actualIndex);
                            setTotalHoursPerDay();
                        },
                        error: function (response) {
                            var errorMessage = reponse.status + ': ' + response.statusText
                            alert('Error - ' + errorMessage);
                        }

                    })
                });
            });
        });

        $('.btn-add-entry').click(function () {
            setValuesToForm(this);
            var projectId = $('#projectIdInput').val();
            setSelector('.issue-selector',issues , projectId);
            setSelector('.activity-selector', activities, projectId);
        });


        $('.btn-close').click(function () {
            clearInputs();
        });

        $('.post-time-entry').click(function () {
            var button = $('.post-time-entry');
            var entry = createDataObject();
            if (validateInputs()) {
                button.attr("disabled", true);
                $.ajax(
                    {
                        url: baseAdress + '/Entries',
                        type: 'POST',
                        data: entry,
                        contentType: 'application/json',
                        success: function () {
                            $('.btn-close').click();
                            $("#date").change();
                            clearInputs();
                            button.attr("disabled", false);
                        },
                        error: function (response) {
                            var errorMessage = reponse.status + ': ' + response.statusText
                            alert('Error - ' + errorMessage);
                            button.attr("disabled", false);
                        }
                    })

            }


        });
    })
</script>

@foreach (var alert in ViewBag.Warnings)
{
    if (alert.Value == 0)
    {
        <div class="alert alert-warning alert-dismissible">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>Warning</strong> You have less than 8 hours logged corresponding to the date: @alert.Key. The ideal hours per day should be at least 8.
        </div>
    }
    else
    {
        <div class="alert alert-danger alert-dismissible">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>Warning</strong> You have hours logged in the date: @alert.Key, which seems to be on weekend.
        </div>
    }
}

<h2>My open projects</h2>

<hr />
<div class="container">
    <div class="row">
        <div>
            @Html.Label("Select the starting day of the week", null, new { @class = "control-label col-xs-3" })
            <div class="col-xs-3">
                <input type="date" id="date" />
            </div>
        </div>
    </div>
</div>
<hr />
<div class="container container-fluid datesTable" style="display: none">
    <table class="table table-responsive table-striped" id="table">
        <thead>
            <tr>
                <th scope="col">Project:</th>
                <th class="tableHeader"></th>
                <th class="tableHeader"></th>
                <th class="tableHeader"></th>
                <th class="tableHeader"></th>
                <th class="tableHeader"></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var project in Model)
            {
                <tr class="table-row" id="@project.Id">
                    <td scope="row" style="width:25%">
                        @project.Name
                        <input type="hidden" value="@project.Id">
                    </td>
                    <td scope="row" class="time-entries">
                        <text>Loading...</text>
                        <button type="button" class="btn btn-success btn-add-entry" data-toggle="modal" data-target="#timeEntryForm">
                            Add time entry
                        </button>
                    </td>
                    <td scope="row" class="time-entries">
                        <text>Loading...</text>
                        <button type="button" class="btn btn-success btn-add-entry" data-toggle="modal" data-target="#timeEntryForm">
                            Add time entry
                        </button>
                    </td>
                    <td scope="row" class="time-entries">
                        <text>Loading...</text>
                        <button type="button" class="btn btn-success btn-add-entry" data-toggle="modal" data-target="#timeEntryForm">
                            Add time entry
                        </button>
                    </td>
                    <td scope="row" class="time-entries">
                        <text>Loading...</text>
                        <button type="button" class="btn btn-success btn-add-entry" data-toggle="modal" data-target="#timeEntryForm">
                            Add time entry
                        </button>
                    </td>
                    <td scope="row" class="time-entries">
                        <text>Loading...</text>
                        <button type="button" class="btn btn-success btn-add-entry" data-toggle="modal" data-target="#timeEntryForm">
                            Add time entry
                        </button>
                    </td>
                </tr>
            }
            <tr>
                <td scope="row" style="width:25%">Total hours per day</td>
                <td class="hours-a-day" style="color:red"><h3>0</h3></td>
                <td class="hours-a-day" style="color:red"><h3>0</h3></td>
                <td class="hours-a-day" style="color:red"><h3>0</h3></td>
                <td class="hours-a-day" style="color:red"><h3>0</h3></td>
                <td class="hours-a-day" style="color:red"><h3>0</h3></td>
            </tr>
        </tbody>
    </table>
</div>

<!-- Modal -->
<div class="modal fade" id="timeEntryForm" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="modalProjectTitle"></h2>
                <h4 style="color:red" class="validation"></h4>
            </div>
            <div class="modal-body">
                <div class="form-group input-group">
                    <form action="/" method="post">
                        <input id="projectIdInput" type="hidden" name="projectId" value="" />
                        <input id="hours-input" class="input-group" type="number" min="0" name="hours" placeholder="Enter hours" /><br />
                        <input id="comment-input" class="input-group" type="text" name="description" placeholder="Enter description" /><br />
                        <h5>Select Issue</h5>
                        <select class="input-group issue-selector" name="issue">
                        </select><br />
                        <h5>Select Activity</h5>
                        <select class="input-group activity-selector" name="activity">
                        </select><br />
                        <input id="dateEntry" type="hidden" name="date" value="" />
                        <text class="input-group" id="dateText">Date: </text><br />
                    </form>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-close" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary post-time-entry">Save changes</button>
            </div>
        </div>
    </div>
</div>